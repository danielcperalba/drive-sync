// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Gestao_de_frotasAPI.Models;

public partial class GESTAO_FROTASContext : DbContext
{
    public GESTAO_FROTASContext()
    {
    }

    public GESTAO_FROTASContext(DbContextOptions<GESTAO_FROTASContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ENDERECO> ENDERECOs { get; set; }

    public virtual DbSet<GASTO> GASTOs { get; set; }

    public virtual DbSet<MANUTENCO> MANUTENCOEs { get; set; }

    public virtual DbSet<Multa> MULTAs { get; set; }

    public virtual DbSet<USUARIO> USUARIOs { get; set; }

    public virtual DbSet<VEICULO> VEICULOs { get; set; }

    public virtual DbSet<VIAGEM> VIAGEMs { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=localhost\\sqlexpress;Initial Catalog=GESTAO_FROTAS;Integrated Security=True;Encrypt=False");



    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ENDERECO>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__ENDERECO__3214EC27BA402C7E");

            entity.ToTable("ENDERECO");

            entity.Property(e => e.BAIRRO)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.CIDADE)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.ESTADO)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.LOGRADOURO)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_USUARIONavigation).WithMany(p => p.ENDERECOs)
                .HasForeignKey(d => d.ID_USUARIO)
                .HasConstraintName("FK_ENDERECO_USUARIO");
        });

        modelBuilder.Entity<GASTO>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__GASTOS__3214EC27D49BA425");

            entity.ToTable("GASTOS");

            entity.Property(e => e.ESTABELECIMENTO)
                .HasMaxLength(500)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_VIAGEMNavigation).WithMany(p => p.GASTOs)
                .HasForeignKey(d => d.ID_VIAGEM)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GASTOS_VIAGEM");
        });

        modelBuilder.Entity<MANUTENCO>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__MANUTENC__3214EC2751EC9CF8");

            entity.ToTable("MANUTENCOES");

            entity.Property(e => e.DESCRICAO)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.FORNECEDOR)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.PECAS_TROCADAS)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.TP_MANUTENCAO)
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_VEICULONavigation).WithMany(p => p.MANUTENCOs)
                .HasForeignKey(d => d.ID_VEICULO)
                .HasConstraintName("FK_MANUTENCOES_VEICULOS");
        });

        modelBuilder.Entity<Multa>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__MULTA__3214EC270572E97A");

            entity.ToTable("MULTA");

            entity.Property(e => e.DESCRICAO)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.TP_INFRACAO)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_VEICULONavigation).WithMany(p => p.MULTa)
                .HasForeignKey(d => d.ID_VEICULO)
                .HasConstraintName("FK_MULTA_VEICULOS");

            entity.HasOne(d => d.ID_VIAGEMNavigation).WithMany(p => p.MULTa)
                .HasForeignKey(d => d.ID_VIAGEM)
                .HasConstraintName("FK_MULTA_VIAGEM");
        });

        modelBuilder.Entity<USUARIO>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__USUARIO__3214EC277C0FFFDD");

            entity.ToTable("USUARIO");

            entity.Property(e => e.CARGO)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EMAIL)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PRIMEIRO_NOME)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.SOBRENOME)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TIPO_CNH)
                .HasMaxLength(3)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VEICULO>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__VEICULOS__3214EC27BB6C47A6");

            entity.ToTable("VEICULOS");

            entity.Property(e => e.MARCA)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.MODELO)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.PLACA)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.STATUS)
                .HasMaxLength(1)
                .IsUnicode(false);
            entity.Property(e => e.TP_COMBUSTIVEL)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VIAGEM>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__VIAGEM__3214EC27ECDDB8DF");

            entity.ToTable("VIAGEM");

            entity.Property(e => e.DESTINO)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.ORIGEM)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.STATUS)
                .HasMaxLength(1)
                .IsUnicode(false);

            entity.HasOne(d => d.ID_MOTORISTANavigation).WithMany(p => p.VIAGEMs)
                .HasForeignKey(d => d.ID_MOTORISTA)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VIAGEM_USUARIO");

            entity.HasOne(d => d.ID_VEICULONavigation).WithMany(p => p.VIAGEMs)
                .HasForeignKey(d => d.ID_VEICULO)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_VIAGEM_VEICULOS");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}